{"version":3,"sources":["panels/js/Main.js","panels/js/Panel1.js","panels/js/Panel2.js","App.js","index.js"],"names":["Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","connect","send","status_bar_style","action_bar_color","window","addEventListener","e","data","parsed","JSON","parse","err","type","location","react_default","a","createElement","vkui","id","className","src","style","width","height","position","frameBorder","React","Component","osname","platform","App","chMenu","setState","showMenu","goBack","history","back","goForward","activePanel","toConsumableArray","push","vkuiConnect","pushState","loadApp","fetchedUser","_this2","event","console","log","his","pop","active","length","subscribe","detail","setTimeout","onSwipeBack","js_Main","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.70e126a9.chunk.js","sourcesContent":["import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { Panel, PanelHeader } from '@vkontakte/vkui';\n\n\nimport '../css/Main.css';\nimport { finished } from 'stream';\n\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    \n    componentDidMount() {\n        connect.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", \"action_bar_color\": \"#87C2E7\" });\n        \n        \n        window.addEventListener( 'message', function(e){\n            if( !e.data ) return;\n            var parsed;\n            try{ parsed = JSON.parse(e.data) } catch(err){ return }\n            if( parsed.type !== 'cosuvOrder' ) return;\n            window.location = 'https://www.robokassa.ru/ru/';\n        });\n        \n    }\n\n    // test = (str) => {\n    //     const arr = str.split('');\n    //     let arrC = [];\n    //     let arrCC = [];\n    //     for ( let i=0; i < arr.length; i++) {\n    //         if (arr[i] === '(') {arrC.push(arr[i])}else if(arr[i] === ')'){arrCC.push(arr[i])}    \n    //     }\n    //     if (arrC.length === arrCC.length) {\n    //         return console.log('ok');\n    //     } else {\n    //         return console.log('not ok');\n    //     }\n    // }\n    \n\n          \n\n    render() {\n        // this.test('2)(3');\n        return (\n            \n            <Panel id={this.props.id}> \n            <PanelHeader>Чехол сервис</PanelHeader> \n                <div className='containerFrame'>\n                    <iframe src=\"https://cosuv.ru/app/3868\" style={{ width:\"100%\",height:\"100%\",position:\"relative\"}} frameBorder=\"0\" ></iframe>\n                </div>\n            </Panel>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, PanelHeaderContent, HeaderButton, platform } from '@vkontakte/vkui';\nimport Icon28Menu from '@vkontakte/icons/dist/28/menu';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n\t\tconnect.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", \"action_bar_color\": \"#87C2E7\" });\n    }\n\n    render() {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={<HeaderButton onClick={() => { this.props.goBack() }} data-to=\"home\">\n                        {osname === \"ios\" ? <Icon28ChevronBack /> : <Icon24Back />}\n                    </HeaderButton>}\n                >\n                    Конструктор\n                </PanelHeader>\n                \n            </Panel>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader, PanelHeaderContent, HeaderButton, platform } from '@vkontakte/vkui';\nimport Icon28Menu from '@vkontakte/icons/dist/28/menu';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n\n    componentDidMount() {\n        connect.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", \"action_bar_color\": \"#87C2E7\" });\n    }\n\n    render() {\n        return (\n            <Panel id={this.props.id}>\n                <PanelHeader\n                    left={\n                        <HeaderButton onClick={() => { this.props.goBack() }}>\n                            {osname === \"ios\" ? <Icon28ChevronBack /> : <Icon24Back />}\n                        </HeaderButton>\n                    }\n                >\n                    Panel2\n                </PanelHeader>\n                <div className=\"vict-main\">\n                    ваш контент\n                </div>\n            </Panel>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\n// import connect from '@vkontakte/vkui-connect';\nimport connect from '@vkontakte/vkui-connect-mock';\nimport vkuiConnect from '@vkontakte/vkui-connect';\nimport { View, ConfigProvider } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Main from './panels/js/Main';\nimport Panel1 from './panels/js/Panel1';\nimport Panel2 from './panels/js/Panel2';\n\nimport './App.css';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'main', // активная панель\n\t\t\thistory: ['main'], // история переходов для свайпа на iOS\n\t\t\tloadApp: false,\n\t\t\tfetchedUser: null,\n\t\t\tshowMenu: false,\n\t\t};\n\t}\n\n\t// метод для открытия/закрытия меню\n\tchMenu = () => {\n\t\tthis.setState({ showMenu: !this.state.showMenu });\n\t}\n\n\tcomponentDidMount() {\n\t\t// прослушавие событий изменеий истории аппы, нужен для нормальной работы нативной кнопки назад на android\n\t\twindow.addEventListener('popstate', (event) => {\n\t\t\tconsole.log(\"назад\")\n\t\t\tconst his = [...this.state.history];\n\t\t\this.pop();\n\t\t\tconst active = his[his.length - 1];\n\t\t\tif (active === 'main') {\n\t\t\t\tvkuiConnect.send('VKWebAppDisableSwipeBack');\n\t\t\t}\n\t\t\tthis.setState({ history: his, activePanel: active });\n\t\t}, false);\n\t\t/////////////////////////////////////////////////////////////\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tsetTimeout(()=>{this.setState({ fetchedUser: e.detail.data, loadApp: true });},500)\t\t\t\t\t\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tvkuiConnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t\t// connect.send(\"VKWebAppSetViewSettings\", { \"status_bar_style\": \"dark\", \"action_bar_color\": \"#3D3D3D\" });\n\n\t}\n\n\t// метод удаления перехода из истории аппы\n\tgoBack = () => {\n\t\twindow.history.back();\n\t}\n\n\t// метод добавления перехода из истории аппы\n\tgoForward = (activePanel) => {\n\t\tconst history = [...this.state.history];\n\t\thistory.push(activePanel);\n\t\tif (this.state.activePanel === 'main') {\n\t\t\tvkuiConnect.send('VKWebAppEnableSwipeBack');\n\t\t}\n\t\twindow.history.pushState({}, '', activePanel)\n\n\t\tthis.setState({ history, activePanel });\n\t}\n\n\n\trender() {\n\t\tif (this.state.loadApp) {\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<ConfigProvider>\n\t\t\t\t\t\n\t\t\t\t\t<View\n\t\t\t\t\t\tactivePanel={this.state.activePanel}\n\t\t\t\t\t\thistory={this.state.history}\n\t\t\t\t\t\tonSwipeBack={this.goBack} // для свайпа на iOS\n\t\t\t\t\t>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<Main\n\t\t\t\t\t\t\tfetchedUser={this.state.fetchedUser}\n\t\t\t\t\t\t\tid=\"main\"\n\t\t\t\t\t\t\tgoBack={this.goBack}\n\t\t\t\t\t\t\tgoForward={this.goForward}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</ConfigProvider>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>Loading ...</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render((<App />), document.getElementById('root'));\n"],"sourceRoot":""}